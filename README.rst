Django-NextJS
~~~~~~~~~~~~~

Isomorphic_ UI Development with Decorator_ pattern for Django_ with:

- NextJS_ out of the box experience for perfect frontend development,
- Django support for NextJS_ template rendering for perfect backend
  development,

As for what you can make with this, refer to both feature list of Django_ and
NextJS_, but an example is that you get automatic client side reload, code
chunking, offline first, and all.

For fun & profit

Run the example project
=======================

Run this commands as non root:

.. code-block:: bash

    git clone https://git.yourlabs.org/oss/djnext
    cd djnext  # all commands must be executed from repo root
    pip install --user --editable .[dev]
    yarn install
    djnext djnext  # required for yarn dev to run
    yarn dev  # run localhost:3000
    djnext dev  # run localhost:8000

The purpose of the example project is to show a create form and a list page
with a hardcoded menu. For complete CRUD views, autogenerated menus and so on,
use CRUDLFA+.


Install in your project
=======================

Install NextJS
--------------

In your repo root, install NextJS_ which means adding these dependencies::

    yarn add nextjs react react-dom

And this commands to your package.json:

.. code-block:: js

    "scripts": {
      "dev": "next",
      "build": "next build",
      "start": "next start"
    }

Then you can run ``yarn dev``.

That was the first step of the NextJS_ tutorial.

Install DjNext
--------------

- Install djnext with pip for example: ``pip install --user djnext``
- Then, add urls for ``/_next``: ``path('_next', include('djnext.urls'))``,
- Then add ``djnext`` to ``INSTALLED_APPS``.
- Run ``manage.py djnext``

It will automatically setup the template backend if you haven't yourself.

If you want to setup the template backend yourself and override options you can
do as such:

.. code-block:: python

    TEMPLATES.insert(0, dict(
        BACKEND='djnext.backend.Backend',
        OPTIONS=dict(
            NEXTJS_DSN='http://localhost:3000',
        )
    ))

This allows picking up React_ templates in JS from django.

While you run ``yarn dev``, you also need to run the ``djnext`` management
command to maintain the NextJS_ pages directory with the ``static/pages``
directory of every INSTALLED_APPS.
Run the your manage.py djnext or yourproject djnext if your project has an entrypoint.

This will watch static/pages directories of all apps in INSTALLED_APPS, and build
the pages/ directory, so that yarn dev will find it.

Tutorial
========

NextJS template engine
----------------------

Example project lives in src/djnext_example, see ``src/djnext_example/artist/urls.py``:

.. code-block:: python

    CreateView.as_view(
        model=Artist,
        fields=['name'],
        success_url=reverse_lazy('artist_list'),
        template_name='create.js',
    )

The template engine will use the static files resolver to find a file matching
``pages/create.js``. In this case, it will request http://localhost:3000/create
to render the ``pages/create.js`` script.

This is made possible by the ``djnext`` management command which watches the
``static/pages`` subdirectory of every INSTALLED_APPS and maintain a ``pages/``
directory, which ``yarn dev`` is able to use.

Troubbleshooting
----------------

Try ``rm -rf node_modules .next && yarn install && yarn dev`` to start the
NextJS server from a fresh install.

Authors
=======

- Frontend expertise: Thomas Binetruy <tbinetruy@yourlabs.org>
- Backend expertise: James Pic <jpic@yourlabs.org>

.. _NextJS: https://nextjs.org
.. _Django: https://www.djangoproject.com
.. _Isomorphic: https://en.wikipedia.org/wiki/Isomorphic_JavaScript
.. _Decorator: https://en.wikipedia.org/wiki/Decorator_pattern
